/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Map;
import org.json.JSONObject;
import java.util.HashMap;
/**
 *
 * @author user
 */
public class cuacasederhana extends javax.swing.JFrame {

    /**
     * Creates new form cuacasederhana
     */
    public cuacasederhana() {
        initComponents();
    }

    private String getWeatherType(String description) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

   public class WeatherService {
        private static final String API_KEY = "2eb3f6edf3da64b4d700b9fb888f1bbc";
        private static final String BASE_URL = "http://api.openweathermap.org/data/2.5/weather?q=";

        public static String getWeatherData(String city) {
            StringBuilder result = new StringBuilder();
            try {
                String urlString = BASE_URL + city + "&units=metric&appid=" + API_KEY;
                URL url = new URL(urlString);

                HttpURLConnection conn = (HttpURLConnection) url.openConnection();
                conn.setRequestMethod("GET");

                BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
                String line;
                while ((line = rd.readLine()) != null) {
                    result.append(line);
                }
                rd.close();
            } catch (Exception e) {
                e.printStackTrace();
                return null;
            }

            return result.toString();
        }
    }
       private Map<String, String> parseWeatherData(String dataCuaca) {
        Map<String, String> weatherInfo = new HashMap<>();
        try {
            JSONObject jsonObject = new JSONObject(dataCuaca);
            JSONObject main = jsonObject.getJSONObject("main");
            JSONObject weather = jsonObject.getJSONArray("weather").getJSONObject(0);

            // Correctly retrieve the temperature as a double
            double temperature = main.getDouble("temp");
            weatherInfo.put("temperature", String.format("%.1f", temperature)); // Format to 1 decimal place

            // Retrieve description
            String description = weather.getString("description");
            weatherInfo.put("description", description);

            // Retrieve weather type (this can be adjusted as per your requirements)
            String weatherType = getWeatherType(description);
            weatherInfo.put("weatherType", weatherType);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return weatherInfo;
    }
    private String getWeatherIconPath(String weatherType) {
        // Ensure weatherType is not null, otherwise use a default
        if (weatherType == null) {
            weatherType = "unknown";  // Default to "unknown" if weatherType is null
        }

        // Choose the appropriate icon based on the weather type
        switch (weatherType) {
            case "hot":
                return "sun.png";
            case "moderate":
                return "cloud.png";
            case "cold":
                return "snow.png";
            default:
                return "unknown.png"; // Default icon if no match
        }
    }
    private String determineWeatherType(float temperature) {
        if (temperature > 30) {
            return "hot";
        } else if (temperature >= 15 && temperature <= 30) {
            return "moderate";
        } else {
            return "cold";
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fanel = new javax.swing.JPanel();
        cmbLokasiFavorit = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtKota = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        lblCuaca = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblGambarCuaca = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fanel.setBackground(new java.awt.Color(0, 102, 102));

        cmbLokasiFavorit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "banjarmasin", "kapuas ", "marabahan", " " }));

        jLabel1.setText("masukan kota :");

        jButton1.setText("cek cuaca");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblCuaca.setText("cuaca: ");

        jLabel3.setText("deskripsi :");

        jLabel4.setText("suhu:");

        lblGambarCuaca.setText("gambar");

        javax.swing.GroupLayout fanelLayout = new javax.swing.GroupLayout(fanel);
        fanel.setLayout(fanelLayout);
        fanelLayout.setHorizontalGroup(
            fanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(fanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblGambarCuaca, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(fanelLayout.createSequentialGroup()
                        .addGroup(fanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(fanelLayout.createSequentialGroup()
                                .addComponent(cmbLokasiFavorit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1))
                            .addComponent(lblCuaca, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(fanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(fanelLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(txtKota, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(84, 84, 84)
                                .addComponent(jButton1))
                            .addGroup(fanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(177, Short.MAX_VALUE))
        );
        fanelLayout.setVerticalGroup(
            fanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(fanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbLokasiFavorit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtKota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(50, 50, 50)
                .addGroup(fanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCuaca)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(110, 110, 110)
                .addComponent(lblGambarCuaca, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     String kota = txtKota.getText();
    if (kota.isEmpty()) {
        kota = cmbLokasiFavorit.getSelectedItem().toString();
    }
    if (!kota.isEmpty()) {
        String dataCuaca = WeatherService.getWeatherData(kota);
        if (dataCuaca != null) {
            Map<String, String> weatherInfo = parseWeatherData(dataCuaca);
            lblCuaca.setText("Cuaca di " + kota);
            jLabel3.setText("Suhu: " + weatherInfo.get("temperature"));
            jLabel4.setText("Deskripsi: " + weatherInfo.get("description"));

            // Display icon based on weather type
            String weatherType = weatherInfo.get("weatherType");
            lblGambarCuaca.setIcon(new javax.swing.ImageIcon(getClass().getResource(getWeatherIconPath(weatherType))));
        } else {
            lblCuaca.setText("Data cuaca tidak ditemukan atau terjadi kesalahan.");
            jLabel3.setText("Suhu: N/A");
            jLabel4.setText("Deskripsi: N/A");
            lblGambarCuaca.setIcon(null);
        }
    } else {
        lblCuaca.setText("Masukkan nama kota.");
        jLabel3.setText("Suhu: N/A");
        jLabel4.setText("Deskripsi: N/A");
        lblGambarCuaca.setIcon(null);
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cuacasederhana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cuacasederhana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cuacasederhana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cuacasederhana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cuacasederhana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbLokasiFavorit;
    private javax.swing.JPanel fanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblCuaca;
    private javax.swing.JLabel lblGambarCuaca;
    private javax.swing.JTextField txtKota;
    // End of variables declaration//GEN-END:variables
}
